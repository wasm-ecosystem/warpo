SPECIAL_OPCODE("func", FUNC, 7)

OPCODE("unreachable", UNREACHABLE, 1)
OPCODE("nop", NOP, 0)
OPCODE("block", BLOCK, 1)
OPCODE("loop", LOOP, 6)
OPCODE("if", IF, 3)
OPCODE("else", ELSE, 4)
OPCODE("end", END, 3)
OPCODE("br", BR, 4)
OPCODE("br_if", BR_IF, 4)
OPCODE("br_table", BR_TABLE, 36)
OPCODE("return", RETURN, 2)
OPCODE("call", CALL, 7)
OPCODE("call_indirect", CALL_INDIRECT, 25)
OPCODE("drop", DROP, 0)
OPCODE("select", SELECT, 3)
OPCODE("local.get", LOCAL_GET, 0)
OPCODE("local.set", LOCAL_SET, 1)
OPCODE("local.tee", LOCAL_TEE, 1)
OPCODE("global.get", GLOBAL_GET, 0)
OPCODE("global.set", GLOBAL_SET, 1)
OPCODE("i32.load", I32_LOAD, 7)
OPCODE("i64.load", I64_LOAD, 7)
OPCODE("f32.load", F32_LOAD, 7)
OPCODE("f64.load", F64_LOAD, 7)
OPCODE("i32.load8_s", I32_LOAD8_S, 7)
OPCODE("i32.load8_u", I32_LOAD8_U, 7)
OPCODE("i32.load16_s", I32_LOAD16_S, 7)
OPCODE("i32.load16_u", I32_LOAD16_U, 7)
OPCODE("i64.load8_s", I64_LOAD8_S, 7)
OPCODE("i64.load8_u", I64_LOAD8_U, 7)
OPCODE("i64.load16_s", I64_LOAD16_S, 7)
OPCODE("i64.load16_u", I64_LOAD16_U, 7)
OPCODE("i64.load32_s", I64_LOAD32_S, 7)
OPCODE("i64.load32_u", I64_LOAD32_U, 7)
OPCODE("i32.store", I32_STORE, 7)
OPCODE("i64.store", I64_STORE, 7)
OPCODE("f32.store", F32_STORE, 7)
OPCODE("f64.store", F64_STORE, 7)
OPCODE("i32.store8", I32_STORE8, 7)
OPCODE("i32.store16", I32_STORE16, 7)
OPCODE("i64.store8", I64_STORE8, 7)
OPCODE("i64.store16", I64_STORE16, 7)
OPCODE("i64.store32", I64_STORE32, 7)
OPCODE("memory.size", MEMORY_SIZE, 1)
OPCODE("memory.grow", MEMORY_GROW, 32)
OPCODE("memory.copy", MEMORY_COPY, 43)
OPCODE("memory.fill", MEMORY_FILL, 23)
OPCODE("i32.const", I32_CONST, 0)
OPCODE("i64.const", I64_CONST, 0)
OPCODE("f32.const", F32_CONST, 0)
OPCODE("f64.const", F64_CONST, 0)
OPCODE("i32.eqz", I32_EQZ, 2)
OPCODE("i32.eq", I32_EQ, 2)
OPCODE("i32.ne", I32_NE, 2)
OPCODE("i32.lt_s", I32_LT_S, 2)
OPCODE("i32.lt_u", I32_LT_U, 2)
OPCODE("i32.gt_s", I32_GT_S, 2)
OPCODE("i32.gt_u", I32_GT_U, 2)
OPCODE("i32.le_s", I32_LE_S, 2)
OPCODE("i32.le_u", I32_LE_U, 2)
OPCODE("i32.ge_s", I32_GE_S, 2)
OPCODE("i32.ge_u", I32_GE_U, 2)
OPCODE("i64.eqz", I64_EQZ, 2)
OPCODE("i64.eq", I64_EQ, 2)
OPCODE("i64.ne", I64_NE, 2)
OPCODE("i64.lt_s", I64_LT_S, 2)
OPCODE("i64.lt_u", I64_LT_U, 2)
OPCODE("i64.gt_s", I64_GT_S, 2)
OPCODE("i64.gt_u", I64_GT_U, 2)
OPCODE("i64.le_s", I64_LE_S, 2)
OPCODE("i64.le_u", I64_LE_U, 2)
OPCODE("i64.ge_s", I64_GE_S, 2)
OPCODE("i64.ge_u", I64_GE_U, 2)
OPCODE("f32.eq", F32_EQ, 3)
OPCODE("f32.ne", F32_NE, 3)
OPCODE("f32.lt", F32_LT, 2)
OPCODE("f32.gt", F32_GT, 2)
OPCODE("f32.le", F32_LE, 2)
OPCODE("f32.ge", F32_GE, 2)
OPCODE("f64.eq", F64_EQ, 2)
OPCODE("f64.ne", F64_NE, 2)
OPCODE("f64.lt", F64_LT, 2)
OPCODE("f64.gt", F64_GT, 2)
OPCODE("f64.le", F64_LE, 2)
OPCODE("f64.ge", F64_GE, 2)
OPCODE("i32.clz", I32_CLZ, 2)
OPCODE("i32.ctz", I32_CTZ, 2)
OPCODE("i32.popcnt", I32_POPCNT, 2)
OPCODE("i32.add", I32_ADD, 1)
OPCODE("i32.sub", I32_SUB, 1)
OPCODE("i32.mul", I32_MUL, 1)
OPCODE("i32.div_s", I32_DIV_S, 13)
OPCODE("i32.div_u", I32_DIV_U, 13)
OPCODE("i32.rem_s", I32_REM_S, 14)
OPCODE("i32.rem_u", I32_REM_U, 14)
OPCODE("i32.and", I32_AND, 1)
OPCODE("i32.or", I32_OR, 1)
OPCODE("i32.xor", I32_XOR, 1)
OPCODE("i32.shl", I32_SHL, 1)
OPCODE("i32.shr_s", I32_SHR_S, 1)
OPCODE("i32.shr_u", I32_SHR_U, 1)
OPCODE("i32.rotl", I32_ROTL, 1)
OPCODE("i32.rotr", I32_ROTR, 1)
OPCODE("i64.clz", I64_CLZ, 2)
OPCODE("i64.ctz", I64_CTZ, 2)
OPCODE("i64.popcnt", I64_POPCNT, 2)
OPCODE("i64.add", I64_ADD, 1)
OPCODE("i64.sub", I64_SUB, 1)
OPCODE("i64.mul", I64_MUL, 1)
OPCODE("i64.div_s", I64_DIV_S, 14)
OPCODE("i64.div_u", I64_DIV_U, 14)
OPCODE("i64.rem_s", I64_REM_S, 14)
OPCODE("i64.rem_u", I64_REM_U, 14)
OPCODE("i64.and", I64_AND, 1)
OPCODE("i64.or", I64_OR, 1)
OPCODE("i64.xor", I64_XOR, 1)
OPCODE("i64.shl", I64_SHL, 1)
OPCODE("i64.shr_s", I64_SHR_S, 1)
OPCODE("i64.shr_u", I64_SHR_U, 1)
OPCODE("i64.rotl", I64_ROTL, 1)
OPCODE("i64.rotr", I64_ROTR, 1)
OPCODE("f32.abs", F32_ABS, 2)
OPCODE("f32.neg", F32_NEG, 2)
OPCODE("f32.ceil", F32_CEIL, 2)
OPCODE("f32.floor", F32_FLOOR, 2)
OPCODE("f32.trunc", F32_TRUNC, 2)
OPCODE("f32.nearest", F32_NEAREST, 2)
OPCODE("f32.sqrt", F32_SQRT, 2)
OPCODE("f32.add", F32_ADD, 2)
OPCODE("f32.sub", F32_SUB, 2)
OPCODE("f32.mul", F32_MUL, 2)
OPCODE("f32.div", F32_DIV, 2)
OPCODE("f32.min", F32_MIN, 2)
OPCODE("f32.max", F32_MAX, 2)
OPCODE("f32.copysign", F32_COPYSIGN, 2)
OPCODE("f64.abs", F64_ABS, 2)
OPCODE("f64.neg", F64_NEG, 2)
OPCODE("f64.ceil", F64_CEIL, 2)
OPCODE("f64.floor", F64_FLOOR, 2)
OPCODE("f64.trunc", F64_TRUNC, 2)
OPCODE("f64.nearest", F64_NEAREST, 2)
OPCODE("f64.sqrt", F64_SQRT, 2)
OPCODE("f64.add", F64_ADD, 2)
OPCODE("f64.sub", F64_SUB, 2)
OPCODE("f64.mul", F64_MUL, 2)
OPCODE("f64.div", F64_DIV, 2)
OPCODE("f64.min", F64_MIN, 2)
OPCODE("f64.max", F64_MAX, 2)
OPCODE("f64.copysign", F64_COPYSIGN, 2)
OPCODE("i32.wrap_i64", I32_WRAP_I64, 1)
OPCODE("i32.trunc_f32_s", I32_TRUNC_F32_S, 14)
OPCODE("i32.trunc_f32_u", I32_TRUNC_F32_U, 14)
OPCODE("i32.trunc_f64_s", I32_TRUNC_F64_S, 14)
OPCODE("i32.trunc_f64_u", I32_TRUNC_F64_U, 14)
OPCODE("i64.extend_i32_s", I64_EXTEND_I32_S, 14)
OPCODE("i64.extend_i32_u", I64_EXTEND_I32_U, 14)
OPCODE("i64.trunc_f32_s", I64_TRUNC_F32_S, 14)
OPCODE("i64.trunc_f32_u", I64_TRUNC_F32_U, 14)
OPCODE("i64.trunc_f64_s", I64_TRUNC_F64_S, 14)
OPCODE("i64.trunc_f64_u", I64_TRUNC_F64_U, 14)
OPCODE("f32.convert_i32_s", F32_CONVERT_I32_S, 1)
OPCODE("f32.convert_i32_u", F32_CONVERT_I32_U, 1)
OPCODE("f32.convert_i64_s", F32_CONVERT_I64_S, 1)
OPCODE("f32.convert_i64_u", F32_CONVERT_I64_U, 1)
OPCODE("f32.demote_f64", F32_DEMOTE_F64, 1)
OPCODE("f64.convert_i32_s", F64_CONVERT_I32_S, 1)
OPCODE("f64.convert_i32_u", F64_CONVERT_I32_U, 1)
OPCODE("f64.convert_i64_s", F64_CONVERT_I64_S, 1)
OPCODE("f64.convert_i64_u", F64_CONVERT_I64_U, 1)
OPCODE("f64.promote_f32", F64_PROMOTE_F32, 1)
OPCODE("i32.reinterpret_f32", I32_REINTERPRET_F32, 1)
OPCODE("i64.reinterpret_f64", I64_REINTERPRET_F64, 1)
OPCODE("f32.reinterpret_i32", F32_REINTERPRET_I32, 1)
OPCODE("f64.reinterpret_i64", F64_REINTERPRET_I64, 1)
OPCODE("i32.extend8_s", I32_EXTEND8_S, 1)
OPCODE("i32.extend16_s", I32_EXTEND16_S, 1)
OPCODE("i64.extend8_s", I64_EXTEND8_S, 1)
OPCODE("i64.extend16_s", I64_EXTEND16_S, 1)
OPCODE("i64.extend32_s", I64_EXTEND32_S, 1)

#undef SPECIAL_OPCODE
#undef OPCODE

